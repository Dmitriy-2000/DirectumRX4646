
// ==================================================================
// VATRate.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
    public class VATRateFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Commons.IVATRate
    {
      protected new global::Sungero.Commons.IVATRateFilterState Filter { get; private set; }

      private global::Sungero.Commons.IVATRateFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public VATRateFilter(global::Sungero.Commons.IVATRateFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected VATRateFilter()
      {
      }
    }
      public class VATRateUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Commons.IVATRate
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class VATRateSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.Int32? Rate { get; protected set; }



        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Commons.Server.VATRateFilter<global::Sungero.Commons.IVATRate>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Commons.Server.VATRateUiFilter<global::Sungero.Commons.IVATRate>))]

  public class VATRate :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Commons.IVATRate
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("fe0ed345-5965-40d6-a559-24dcde189a95");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Commons.Server.VATRate.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Commons.IVATRate, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Commons.IVATRateState State
    {
      get { return (global::Sungero.Commons.IVATRateState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Commons.Shared.VATRateState(this);
    }

    public new virtual global::Sungero.Commons.IVATRateInfo Info
    {
      get { return (global::Sungero.Commons.IVATRateInfo)base.Info; }
    }

    public new virtual global::Sungero.Commons.IVATRateAccessRights AccessRights
    {
      get { return (global::Sungero.Commons.IVATRateAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Commons.Server.VATRateAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Commons.Server.VATRateFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Commons.Shared.VATRateFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Commons.VATRateServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Commons.VATRateSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Int32? _Rate;
    public virtual global::System.Int32? Rate
    {
      get
      {
        return this._Rate;
      }

      set
      {
        this.SetPropertyValue("Rate", this._Rate, value, (propertyValue) => { this._Rate = propertyValue; }, this.RateChangedHandler);
      }
    }
    private global::System.String _Sid;
    public virtual global::System.String Sid
    {
      get
      {
        return this._Sid;
      }

      set
      {
        this.SetPropertyValue("Sid", this._Sid, value, (propertyValue) => { this._Sid = propertyValue; }, this.SidChangedHandler);
      }
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Commons.VATRateCreatingFromServerHandler", new object[] { (global::Sungero.Commons.IVATRate)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Commons.VATRateCreatingFromServerHandler((global::Sungero.Commons.IVATRate)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Commons.IVATRateSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void RateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Rate, this.Rate, this);
     ((global::Sungero.Commons.IVATRateSharedHandlers)this.SharedHandlers).RateChanged(args);
    }

    protected void SidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Sid, this.Sid, this);
     ((global::Sungero.Commons.IVATRateSharedHandlers)this.SharedHandlers).SidChanged(args);
    }



    #endregion


    public VATRate()
    {
    }

  }
}

// ==================================================================
// VATRateHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons
{

  public partial class VATRateFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Commons.IVATRate
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Commons.IVATRateFilterState Filter { get; private set; }

    private global::Sungero.Commons.IVATRateFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public VATRateFilteringServerHandler(global::Sungero.Commons.IVATRateFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected VATRateFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class VATRateUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Commons.IVATRate
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class VATRateSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Commons.Server.VATRateSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Commons.Server.VATRateSearchDialogModel)this.Dialog;
       }
     }

     public VATRateSearchDialogServerHandler(global::Sungero.Commons.Server.VATRateSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class VATRateServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Commons.IVATRate _obj
    {
      get { return (global::Sungero.Commons.IVATRate)this.Entity; }
    }

    public VATRateServerHandlers(global::Sungero.Commons.IVATRate entity)
      : base(entity)
    {
    }
  }

  public partial class VATRateCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Commons.IVATRate _source
    {
      get { return (global::Sungero.Commons.IVATRate)this.Source; }
    }

    private global::Sungero.Commons.IVATRateInfo _info
    {
      get { return (global::Sungero.Commons.IVATRateInfo)this._Info; }
    }

    public VATRateCreatingFromServerHandler(global::Sungero.Commons.IVATRate source, global::Sungero.Commons.IVATRateInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// VATRateEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// VATRateAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public class VATRateAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Commons.IVATRateAccessRights
  {

    public VATRateAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class VATRateTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Commons.IVATRateAccessRights
  {

    public VATRateTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// VATRateRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
    public class VATRateRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Commons.IVATRateRepositoryImplementer<T>
      where T : global::Sungero.Commons.IVATRate 
    {
       public new global::Sungero.Commons.IVATRateAccessRights AccessRights
       {
          get { return (global::Sungero.Commons.IVATRateAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Commons.IVATRateInfo Info
       {
          get { return (global::Sungero.Commons.IVATRateInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Commons.Server.VATRateTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// VATRatePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// VATRateServerFunctions.g.cs
// ==================================================================

namespace Sungero.Commons.Server
{
  public partial class VATRateFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Commons.IVATRate _obj
    {
      get { return (global::Sungero.Commons.IVATRate)this.Entity; }
    }

    public VATRateFunctions(global::Sungero.Commons.IVATRate entity) : base(entity) { }
  }
}

// ==================================================================
// VATRateFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Functions
{
  internal static class VATRate
  {
  }
}

// ==================================================================
// VATRateServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public class VATRateServerPublicFunctions : global::Sungero.Commons.Server.IVATRateServerPublicFunctions
  {
  }
}

// ==================================================================
// VATRateQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Queries
{
  public class VATRate
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Commons.Server.VATRate.VATRateQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
