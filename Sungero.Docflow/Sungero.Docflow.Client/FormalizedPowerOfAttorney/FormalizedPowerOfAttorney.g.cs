
// ==================================================================
// FormalizedPowerOfAttorney.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorney :
    global::Sungero.Docflow.Client.PowerOfAttorneyBase, global::Sungero.Docflow.IFormalizedPowerOfAttorney
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("104472db-b71b-42a8-bca5-581a08d1ca7b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.FormalizedPowerOfAttorney.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IFormalizedPowerOfAttorney, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyState State
    {
      get
      {
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.FormalizedPowerOfAttorneyState(this);
    }

    public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _UnifiedRegistrationNumber;

        public virtual global::System.String UnifiedRegistrationNumber
        {
          get { return this._UnifiedRegistrationNumber.Value; }
          set { this._UnifiedRegistrationNumber.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyAnyChildEntityCollectionActions();
    }

    protected override object CreateVersionsActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyVersionsActions();
    }

    protected override object CreateVersionsCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyVersionsCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.FormalizedPowerOfAttorneyFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.FormalizedPowerOfAttorneySharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void UnifiedRegistrationNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.UnifiedRegistrationNumber, this.UnifiedRegistrationNumber, this);
     ((global::Sungero.Docflow.IFormalizedPowerOfAttorneySharedHandlers)this.SharedHandlers).UnifiedRegistrationNumberChanged(args);
    }





  protected global::System.String UnifiedRegistrationNumberValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.UnifiedRegistrationNumber, value, this, this.Info.Properties.UnifiedRegistrationNumber);
    ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).UnifiedRegistrationNumberValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors





















            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IFormalizedPowerOfAttorneyVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IFormalizedPowerOfAttorneyTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }


    public FormalizedPowerOfAttorney()
    {
            this._UnifiedRegistrationNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("UnifiedRegistrationNumber", this);
            this._UnifiedRegistrationNumber.ValueChanged += (sender, e) => { this.UnifiedRegistrationNumberChangedHandler(); };
            this.AddProperty(this._UnifiedRegistrationNumber);








    }

    #endregion

  }
}

// ==================================================================
// FormalizedPowerOfAttorneyPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorneyPresenter<T> :
    global::Sungero.Docflow.Client.PowerOfAttorneyBasePresenter<T>
    where T : class, global::Sungero.Docflow.IFormalizedPowerOfAttorney
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ImportVersionWithSignatureCommand;

          public global::System.Windows.Input.ICommand ImportVersionWithSignatureCommand
          {
            get
            {
              if (this._ImportVersionWithSignatureCommand == null)
                  this._ImportVersionWithSignatureCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ImportVersionWithSignature", this, this.ImportVersionWithSignature, this.CanImportVersionWithSignature) { IsEmptyParameterAllowed = true };
              return this._ImportVersionWithSignatureCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDuplicatesCommand;

          public global::System.Windows.Input.ICommand ShowDuplicatesCommand
          {
            get
            {
              if (this._ShowDuplicatesCommand == null)
                  this._ShowDuplicatesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDuplicates", this, this.ShowDuplicates, this.CanShowDuplicates) { IsEmptyParameterAllowed = true };
              return this._ShowDuplicatesCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanImportVersionWithSignature(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanImportVersionWithSignature(args);
              }

              private void ImportVersionWithSignature(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ImportVersionWithSignature);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).ImportVersionWithSignature(args);
              }
              private bool CanShowDuplicates(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanShowDuplicates(args);
              }

              private void ShowDuplicates(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDuplicates);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).ShowDuplicates(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ICaseFile>(() => this.Entity, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

              this._OurSigningReasonCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ISignatureSetting>(() => this.Entity, typeof(T), "OurSigningReason");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._IssuedToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "IssuedTo");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyTracking), "ReturnTask");



    }

    public FormalizedPowerOfAttorneyPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// FormalizedPowerOfAttorneyCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorneyCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.PowerOfAttorneyBaseCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IFormalizedPowerOfAttorney
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public FormalizedPowerOfAttorneyCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public FormalizedPowerOfAttorneyCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public FormalizedPowerOfAttorneyCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public FormalizedPowerOfAttorneyCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// FormalizedPowerOfAttorneyRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class FormalizedPowerOfAttorneyRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.PowerOfAttorneyBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IFormalizedPowerOfAttorneyRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IFormalizedPowerOfAttorney
    {
       public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo Info
       {
          get { return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// FormalizedPowerOfAttorneyAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorneyAccessRights : 
    Sungero.Docflow.Client.PowerOfAttorneyBaseAccessRights, Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights
  {

    public FormalizedPowerOfAttorneyAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class FormalizedPowerOfAttorneyTypeAccessRights : 
    Sungero.Docflow.Client.PowerOfAttorneyBaseTypeAccessRights, Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights
  {

    public FormalizedPowerOfAttorneyTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
